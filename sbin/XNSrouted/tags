FIXLEN	tables.c	/^#define FIXLEN(s) { if ((s)->sa_len == 0) (s)->sa_/
Mmain	main.c	/^main(argc, argv)$/
addrouteforif	startup.c	/^addrouteforif(ifp)$/
dumpif	trace.c	/^dumpif(fd, ifp)$/
dumppacket	trace.c	/^dumppacket(fd, dir, who, cp, size)$/
dumptrace	trace.c	/^dumptrace(fd, dir, ifd)$/
fkexit	main.c	/^fkexit()$/
getsocket	main.c	/^getsocket(type, proto, sns)$/
hup	timer.c	/^hup()$/
if_iflookup	if.c	/^if_iflookup(addr)$/
if_ifwithaddr	if.c	/^if_ifwithaddr(addr)$/
if_ifwithdstaddr	if.c	/^if_ifwithdstaddr(addr)$/
if_ifwithnet	if.c	/^if_ifwithnet(addr)$/
ifinit	startup.c	/^ifinit()$/
iftraceinit	trace.c	/^iftraceinit(ifp, ifd)$/
mask	main.c	/^#define	mask(s)	(1<<((s)-1))$/
max	startup.c	/^#define max(a, b) (a > b ? a : b)$/
null_canon	af.c	/^null_canon(a1)$/
null_checkhost	af.c	/^null_checkhost(a1)$/
null_hash	af.c	/^null_hash(addr, hp)$/
null_ishost	af.c	/^null_ishost(a1)$/
null_netmatch	af.c	/^null_netmatch(a1, a2)$/
null_output	af.c	/^null_output(s, f, a1, n)$/
null_portcheck	af.c	/^null_portcheck(a1)$/
null_portmatch	af.c	/^null_portmatch(a1)$/
process	main.c	/^process(fd)$/
rip_input	input.c	/^rip_input(from, size)$/
rtadd	tables.c	/^rtadd(dst, gate, metric, state)$/
rtchange	tables.c	/^rtchange(rt, gate, metric)$/
rtdelete	tables.c	/^rtdelete(rt)$/
rtfind	tables.c	/^rtfind(dst)$/
rtinit	tables.c	/^rtinit()$/
rtlookup	tables.c	/^rtlookup(dst)$/
same	if.c	/^#define	same(a1, a2) \\$/
size	startup.c	/^#define size(p)	max((p).sa_len, sizeof(p))$/
sndmsg	output.c	/^sndmsg(dst, flags, ifp)$/
supply	output.c	/^supply(dst, flags, ifp)$/
timer	timer.c	/^timer()$/
toall	output.c	/^toall(f)$/
trace	trace.c	/^trace(ifd, who, p, len, m)$/
traceaction	trace.c	/^traceaction(fd, action, rt)$/
traceinit	trace.c	/^traceinit(ifp)$/
traceoff	trace.c	/^traceoff()$/
traceon	trace.c	/^traceon(file)$/
xnnet_canon	af.c	/^xnnet_canon(sns)$/
xnnet_checkhost	af.c	/^xnnet_checkhost(sns)$/
xnnet_hash	af.c	/^xnnet_hash(sns, hp)$/
xnnet_ishost	af.c	/^xnnet_ishost(sns)$/
xnnet_netmatch	af.c	/^xnnet_netmatch(sxn1, sxn2)$/
xnnet_output	af.c	/^xnnet_output(flags, sns, size)$/
xnnet_portmatch	af.c	/^xnnet_portmatch(sns)$/
xns_nettoa	trace.c	/^xns_nettoa(val)$/
xns_nettosa	input.c	/^xns_nettosa(net)$/
xns_ntoa	trace.c	/^xns_ntoa(addr)$/
